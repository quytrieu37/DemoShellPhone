@model Demo.WebUI.Models.HomeListProductViewModel
@{
    ViewBag.Title = "ListProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12 col-md-3">
        <div class="list-group">
            @foreach (var category in Model.Categories)
            {
                <a href="@Url.Action("ListProduct","Home",new { category = category.CategoryId })"
                   class="list-group-item">
                    @category.CategoryName
                </a>
            }
        </div>

    </div>
    <div class="col-12 col-md-9">

        <div class="card-deck mb-3 text-center">
            @foreach (var product in Model.Products)
            {
                @Html.Partial("_ProductSummary", product)//gọi partial view ko cần action
            }
        </div>

        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (Model.PagingInfo.CurentPage > 1)
                {
                    <li class="page-item"><a class="page-link" href="@Url.Action("ListProduct", "Home", new { page = Model.PagingInfo.CurentPage - 1, pageSize = Model.PagingInfo.PageSize, category = Model.CurrentCategory })">Previous</a></li>
                }

                @*@for (int i = 1, n = Model.PagingInfo.TotalPages; i <= n; i++)
                    {
                        <li class="page-item @(i == Model.PagingInfo.Page ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ListProduct", "Home", new { page = i, pageSize = Model.PagingInfo.PageSize, category = Model.CurrentCategory })">@i</a>
                        </li>
                    }*@

                @if (Model.PagingInfo.CurentPage - 2 > 0 && Model.PagingInfo.CurentPage + 2 < Model.PagingInfo.TotalPages + 1)
                {
                    for (int i = Model.PagingInfo.CurentPage - 2; i < Model.PagingInfo.CurentPage + 3; i++)
                    {
                        <li class="page-item @(i == Model.PagingInfo.CurentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ListProduct", "Home", new { page = i, pageSize = Model.PagingInfo.PageSize, category = Model.CurrentCategory })">@i</a>
                        </li>
                    }
                }

                @if (Model.PagingInfo.CurentPage == 1 || Model.PagingInfo.CurentPage == 2)
                {
                    for (int i = 1; i < 6; i++)
                    {
                        <li class="page-item @(i == Model.PagingInfo.CurentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ListProduct", "Home", new { page = i, pageSize = Model.PagingInfo.PageSize, category = Model.CurrentCategory })">@i</a>
                        </li>
                    }
                }

                @if (Model.PagingInfo.CurentPage == Model.PagingInfo.TotalPages || Model.PagingInfo.CurentPage == Model.PagingInfo.TotalPages - 1)
                {
                    for (int i = Model.PagingInfo.TotalPages - 5; i < Model.PagingInfo.TotalPages + 1; i++)
                    {
                        <li class="page-item @(i == Model.PagingInfo.CurentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ListProduct", "Home", new { page = i, pageSize = Model.PagingInfo.PageSize, category = Model.CurrentCategory })">@i</a>
                        </li>
                    }
                }

                @if (Model.PagingInfo.CurentPage < Model.PagingInfo.TotalPages)
                {
                    <li class="page-item"><a class="page-link" href="@Url.Action("ListProduct", "Home", new { page = Model.PagingInfo.CurentPage + 1, pageSize = Model.PagingInfo.PageSize, category = Model.CurrentCategory })">Next</a></li>
                }
            </ul>
        </nav>

    </div>
    @*<table>
        <tr>
            <td colspan="4" class="text-center">
                <nav>
                    <ul class="pagination">
                        @Html.PageLinks(Model.PagingInfo, x=>Url.Action("ListProduct",
                       new {
                           Page=x
                       }))
                    </ul>
                </nav>
            </td>
        </tr>
    </table>
</div>*@
</div>
@Html.PageLinks(Model.PagingInfo,
    x => Url.Action("ListProduct", "Home", new {
    page = x,
    pageSize = Model.PagingInfo.PageSize,
    category = Model.CurrentCategory
}))
